{"version":3,"file":"static/js/736.dd6db0bd.chunk.js","mappings":"4RAEaA,EAAWC,EAAAA,EAAAA,GAAH,0EAMRC,EAAWD,EAAAA,EAAAA,GAAH,0FAMRE,EAAYF,EAAAA,EAAAA,IAAH,gFAMTG,EAAWH,EAAAA,EAAAA,EAAH,gFAMRI,EAAgBJ,EAAAA,EAAAA,EAAH,0DAKbK,EAAcL,EAAAA,EAAAA,IAAH,8G,SChBT,SAASM,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6FACCD,GAAW,GADZ,kBAG0BE,EAAAA,EAAwBR,GAHlD,gBAGWG,EAHX,EAGWA,KACRC,EAAQD,GAJX,gDAMGM,QAAQC,IAAI,sBAAuB,KAAMC,SAN5C,yBAQGL,GAAW,GARd,2EAAD,EAWD,GAAE,CAACN,KAGF,8BACGK,GACC,8CAEA,8BACGF,EAAKS,QACJ,SAACpB,EAAD,UACGW,EAAKU,KAAI,SAAAC,GAAK,OACb,UAACpB,EAAD,WACGoB,EAAMC,cACL,SAACpB,EAAD,CACEqB,IAjCE,kCAiCqBF,EAAMC,aAC7BE,IAAKH,EAAMI,QAGb,SAACpB,EAAD,KAEF,4BACE,SAACF,EAAD,UAAWkB,EAAMI,QACjB,UAACrB,EAAD,iBAAmBiB,EAAMK,kBAXdL,EAAMM,GADR,OAkBjB,gEAMX,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const CastImage = styled.img`\n  width: 50px;\n  height: 75px;\n  margin-right: 10px;\n`;\n\nexport const CastName = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n  margin: 0;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const CastNoImage = styled.div`\n  width: 50px;\n  height: 75px;\n  margin-right: 10px;\n  background-color: #e0e0e0;\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as theMovieDbAPI from '../../components/api/themoviedbApi';\nimport {\n  CastList,\n  CastItem,\n  CastImage,\n  CastName,\n  CastCharacter,\n  CastNoImage,\n} from './Cast.styled';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w154';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const { cast } = await theMovieDbAPI.fetchCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log('Error fetching cast', error.message);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading cast...</div>\n      ) : (\n        <>\n          {cast.length ? (\n            <CastList>\n              {cast.map(actor => (\n                <CastItem key={actor.id}>\n                  {actor.profile_path ? (\n                    <CastImage\n                      src={IMAGES_BASE_URL + actor.profile_path}\n                      alt={actor.name}\n                    />\n                  ) : (\n                    <CastNoImage />\n                  )}\n                  <div>\n                    <CastName>{actor.name}</CastName>\n                    <CastCharacter>as {actor.character}</CastCharacter>\n                  </div>\n                </CastItem>\n              ))}\n            </CastList>\n          ) : (\n            <p>We don't have cast for this movie</p>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["CastList","styled","CastItem","CastImage","CastName","CastCharacter","CastNoImage","Cast","movieId","useParams","useState","cast","setCast","isLoading","setLoading","useEffect","theMovieDbAPI","console","log","message","length","map","actor","profile_path","src","alt","name","character","id"],"sourceRoot":""}