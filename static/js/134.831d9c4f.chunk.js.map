{"version":3,"file":"static/js/134.831d9c4f.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","Pages/Movies/Movies.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  border-bottom: 1px solid #4a4a4a62;\n\n  > nav {\n    display: flex;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  height: 30px;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 16px;\n  outline: none;\n  border: none;\n  font: inherit;\n`;\n\nexport const Button = styled.button`\n  background-color: rgb(106 106 106);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 16px;\n  border: none;\n  height: 100%;\n  color: #fff;\n  font-weight: 500;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #555;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from './SearchBox.styled';\n\nfunction SearchBox({ onSubmit, initialValue }) {\n  const [query, setQuery] = useState(initialValue);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ query });\n  };\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"query\" value={query} onChange={handleChange} />\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n}\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialValue: PropTypes.string,\n};\n\nexport default SearchBox;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport * as theMovieDbAPI from '../../components/api/themoviedbApi';\nimport MovieList from 'components/MovieList/MovieList';\n\nexport default function Movies() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    loadMovies(query);\n  }, [query]);\n\n  const onSubmit = ({ query }) => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    loadMovies(query);\n  };\n\n  const loadMovies = async query => {\n    if (!query.length) return;\n    setLoading(true);\n    try {\n      const { results } = await theMovieDbAPI.searchReviews(query);\n      setMovies(results);\n    } catch (error) {\n      console.log('Error fetching images', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <SearchBox onSubmit={onSubmit} initialValue={query} />\n      {isLoading ? (\n        <div>Loading the movie...</div>\n      ) : (\n        <MovieList\n          movies={movies}\n          location={location}\n          title={\n            query ? `Search results by word \"${query}\"` : `Enter your query`\n          }\n        />\n      )}\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n`;\nexport const MovieTitle = styled.h1`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 32px;\n  margin-top: 32px;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 30px;\n  font-weight: 700;\n  text-decoration: none;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  border-radius: 4px;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);\n  background-color: #ffffffbc;\n  position: relative;\n  display: block;\n  width: 100%;\n  padding-top: 40%; /* 21:9 aspect ratio */\n  z-index: 1;\n  transition: transform 0.3s ease-in-out;\n\n  &:before {\n    content: '';\n    display: block;\n    padding-top: 150%;\n  }\n\n  > iframe {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n  }\n\n  > img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, MovieTitle, List, MovieLink } from './MovieList.styled';\nimport * as theMovieDbAPI from '../../components/api/themoviedbApi';\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport default function MovieList({ movies, location, title }) {\n  const [trailer, setTrailer] = useState(null);\n\n  const handleMovieHover = async movieId => {\n    const video = await theMovieDbAPI.fetchTrailer(movieId);\n    if (video) {\n      setTrailer({ video, movieId });\n    }\n  };\n\n  const handleMovieLeave = () => {\n    setTrailer(null);\n  };\n\n  return (\n    <>\n      {!!title.length && <Title>{title}</Title>}\n      {!!movies.length && (\n        <List>\n          {movies.map(movie => (\n            <li key={movie.id} title=\"Click to read movie details\">\n              <MovieLink\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n                onMouseEnter={() => handleMovieHover(movie.id)}\n                onMouseLeave={handleMovieLeave}\n              >\n                {trailer && trailer.movieId === movie.id && trailer.video ? (\n                  <iframe\n                    title={movie.title}\n                    src={trailer.video}\n                    allow=\"autoplay; \"\n                  />\n                ) : (\n                  movie.poster_path && (\n                    <img\n                      src={IMAGES_BASE_URL + movie.poster_path}\n                      alt={movie.title}\n                    />\n                  )\n                )}\n                {!movie.poster_path && <MovieTitle>{movie.title}</MovieTitle>}\n              </MovieLink>\n            </li>\n          ))}\n        </List>\n      )}\n    </>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n};\n"],"names":["Form","styled","NavLink","Input","Button","onSubmit","initialValue","useState","query","setQuery","event","preventDefault","type","name","value","onChange","target","Movies","location","useLocation","useSearchParams","searchParams","setSearchParams","movies","setMovies","isLoading","setLoading","get","useEffect","loadMovies","length","theMovieDbAPI","results","console","log","message","MovieList","title","Title","MovieTitle","List","MovieLink","Link","trailer","setTrailer","handleMovieHover","movieId","video","handleMovieLeave","map","movie","to","id","state","from","onMouseEnter","onMouseLeave","src","allow","poster_path","alt"],"sourceRoot":""}