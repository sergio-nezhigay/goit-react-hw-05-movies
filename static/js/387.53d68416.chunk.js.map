{"version":3,"file":"static/js/387.53d68416.chunk.js","mappings":"wRAEaA,EAAaC,EAAAA,GAAAA,GAAH,iEAKVC,EAAaD,EAAAA,GAAAA,GAAH,2CAIVE,EAAeF,EAAAA,GAAAA,EAAH,mEAKZG,EAAaH,EAAAA,GAAAA,EAAH,sC,SCJR,SAASI,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6FACCD,GAAW,GADZ,kBAG6BE,EAAAA,GAA2BR,GAHxD,gBAGWS,EAHX,EAGWA,QACRL,EAAWK,GAJd,gDAMGC,QAAQC,IAAI,sBAAuB,KAAMC,SAN5C,yBAQGN,GAAW,GARd,2EAAD,EAWD,GAAE,CAACN,KAGF,8BACGK,GACC,iDAEA,8BACGF,EAAQU,QACP,SAACnB,EAAD,UACGS,EAAQW,KAAI,SAAAC,GAAM,OACjB,UAACnB,EAAD,YACE,SAACC,EAAD,UAAekB,EAAOC,UACtB,SAAClB,EAAD,UAAaiB,EAAOE,YAFLF,EAAOG,GADP,OAQrB,uEAMX,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin: 20px 0;\n`;\n\nexport const ReviewAuthor = styled.p`\n  font-weight: bold;\n  margin: 0 0 10px;\n`;\n\nexport const ReviewText = styled.p`\n  margin: 0;\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as theMovieDbAPI from '../../components/api/themoviedbApi';\n\nimport {\n  ReviewList,\n  ReviewItem,\n  ReviewAuthor,\n  ReviewText,\n} from './Reviews.styled';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const { results } = await theMovieDbAPI.fetchReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log('Error fetching cast', error.message);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading reviews...</div>\n      ) : (\n        <>\n          {reviews.length ? (\n            <ReviewList>\n              {reviews.map(review => (\n                <ReviewItem key={review.id}>\n                  <ReviewAuthor>{review.author}</ReviewAuthor>\n                  <ReviewText>{review.content}</ReviewText>\n                </ReviewItem>\n              ))}\n            </ReviewList>\n          ) : (\n            <p>We don't have any reviews for this movie</p>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["ReviewList","styled","ReviewItem","ReviewAuthor","ReviewText","Reviews","movieId","useParams","useState","reviews","setReviews","isLoading","setLoading","useEffect","theMovieDbAPI","results","console","log","message","length","map","review","author","content","id"],"sourceRoot":""}