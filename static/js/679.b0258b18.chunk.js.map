{"version":3,"file":"static/js/679.b0258b18.chunk.js","mappings":"gRAOe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6FACCD,GAAW,GADZ,kBAG6BE,EAAAA,KAH7B,gBAGWC,EAHX,EAGWA,QACRL,EAAUK,GAJb,gDAMGC,QAAQC,IAAI,wBAAyB,KAAMC,SAN9C,yBAQGN,GAAW,GARd,2EAAD,EAWD,GAAE,KAGD,8BACGD,GACC,gDAEA,SAAC,IAAD,CACEF,OAAQA,EACRH,SAAUA,EACVa,MAAO,qBAKhB,C,8FCpCYC,EAAQC,EAAAA,GAAAA,GAAH,gDAILC,EAAOD,EAAAA,GAAAA,GAAH,kLASJE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2pB,SCbP,SAASI,EAAT,GAAiD,IAA5BhB,EAA2B,EAA3BA,OAAQH,EAAmB,EAAnBA,SAAUa,EAAS,EAATA,MACpD,OACE,kCACKA,EAAMO,SAAU,SAACN,EAAD,UAAQD,MACxBV,EAAOiB,SACR,SAACJ,EAAD,UACGb,EAAOkB,KAAI,SAAAC,GAAK,OACf,yBACE,UAACL,EAAD,CAAWM,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM1B,GAArD,UACGsB,EAAMK,cACL,gBACEC,IAbI,kCAamBN,EAAMK,YAC7BE,IAAKP,EAAMT,SAGf,yBAAMS,EAAMT,YARPS,EAAME,GADA,QAiB1B,C","sources":["Pages/HomeView/HomeView.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as theMovieDbAPI from '../../components/api/themoviedbApi';\n\nimport MovieList from 'components/MovieList/MovieList';\n\nexport default function Home() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const { results } = await theMovieDbAPI.fetchTrending();\n        setMovies(results);\n      } catch (error) {\n        console.log('Error fetching images', error.message);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading movies...</div>\n      ) : (\n        <MovieList\n          movies={movies}\n          location={location}\n          title={'Trending movies'}\n        />\n      )}\n    </>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 32px;\n  margin-top: 32px;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  font-size: 30px;\n  font-weight: 700;\n  text-decoration: none;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n  border-radius: 4px;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);\n  background-color: #ffffffbc;\n  position: relative;\n  z-index: 1;\n  transition: transform 0.3s ease-in-out;\n  &:before {\n    content: '';\n    display: block;\n    padding-top: 150%;\n  }\n\n  &:hover {\n    transform: scale(1.4);\n    z-index: 2;\n  }\n\n  > img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n","import { Title, List, MovieLink } from './MovieList.styled';\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport default function MovieList({ movies, location, title }) {\n  return (\n    <>\n      {!!title.length && <Title>{title}</Title>}\n      {!!movies.length && (\n        <List>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.poster_path && (\n                  <img\n                    src={IMAGES_BASE_URL + movie.poster_path}\n                    alt={movie.title}\n                  />\n                )}\n                <div>{movie.title}</div>\n              </MovieLink>\n            </li>\n          ))}\n        </List>\n      )}\n    </>\n  );\n}\n"],"names":["Home","location","useLocation","useState","movies","setMovies","isLoading","setLoading","useEffect","theMovieDbAPI","results","console","log","message","title","Title","styled","List","MovieLink","Link","MovieList","length","map","movie","to","id","state","from","poster_path","src","alt"],"sourceRoot":""}